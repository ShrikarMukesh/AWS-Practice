=======================
Module 15 - Analytics - Part 1
=======================
Part 1:
---------
1) Introduction to BigData
2) Amazon RedShift 
2.1) Introduction
2.2) Key Points about Redshift
2.3) Snapshots and DR
2.4) Storing Data into Redshift
2.5) Redshift Cluster
2.6) Demo : Creating Redshift Cluster
2.7) Redshift Spectrum
2.8) Redshift Serverless

3) Amazon EMR
3.1) Introduction
3.2) Hadoop Cluster
3.3) Demo : Creating EMR Cluster
3.4) Amazon EMR Serverless

Part 2:
---------
4) Amazon Kiness
4.1) Introduction
4.2) Kinesis Data Streams
4.2.1) Introduction
4.2.2) How Kinesis Data Streams works Internally
4.2.3) Demo : Creating Kinesis Data Stream

Part 3:
---------
4.3) Kinesis Data Firehose
4.3.1) Introduction
4.3.2) How Kinesis Data Firehouse works Internally
4.3.3) Demo : Creating Kinesis Data Firehose
4.3.4) Kinesis Data Strams(KDS) Vs Kinesis Data Forhose(KDF)

4.4) Kinesis Data Analytics
4.4.1) Kinesis Data Analytics
4.4.2) Kinesis Data Analytics for SQL Applications
4.4.3) Kinesis Data Analytics for Flink Applications
4.4.4) When Should I Use Amazon Kinesis Data Analytics?

Part 4:
-----------
5) Amazon Athena
6) AWS Glue
7) Amazon MSK

Part 5:
-----------
8) Amazon QucikSight
9) AWS Data Pipeline
10) Amazon OpenSearch Service

Part 6:
-----------
11) Analytics -  Tips
Exam #14 - Analytics 

========================
1) Introduction to BigData
========================
=> You need to Store and Process Data.

3 V's of Big Data
---------------------

a) Volume :
--------------
=> Data Ranging from Tera Bytes to Peta Bytes.

b) Variety:
--------------
=> Data from wide range of Sources and Formats
   Ex:
	Web logs
	Social media interactions
	Ecommerce Transactions
	Financial Transactions
	etc

c) Velocity:
--------------
=> Business require Speed
=> Data needs to be collected , stored , Processed  and Analyzed within short perid of time.


=================
2) Amazon Redshift 
=================

2.1) Introduction
===============
=> Amazon Redshift is a fully managed, petabyte-scale data warehouse service in the AWS Cloud. 
=> Redshift is a large Relational Database used in Big Data Applications.
=> Redshift is used for OLAP Applications, not for OLTP Applications
(OLAP  - Online Analytical Processing)
(OLTP  - Online Transaction Processing)- RDS ,Aurora, DynamoDD etc 

=> Redshift costs less than $1,000 per terabyte per year

2.2) Key Points about Redshift
========================
a) Size:
---------
=> Redshift is big. 
=> It is a place where you can store massive amount of data
=> It can store upto 16PB.

b) Relational:
------------------
=> Redshift is a Relational Database.
=> Redshift has SQL Interface for Queries.
=> You can Integrate BI Tools like Amazon QuickSight or Tableau

c) Usage:
-----------
=> Redshift is a great tool for BI Applications.
=> It is not a replacement for Standard RDS Databases.

2.3) Snapshots and DR
===================
=> Redshift do not have Multi-AZ mode.
=> You can create Snapshots of your Redshift cluster
=> Snapshots are point-in-time backups of  Redshift cluster stored internally in S3.
=> Snapshots are Incremental.

=> You can restore the Snapshot into new Cluster

=> There are two types of snapshots: 
a) Automated Snapshots 
b) Manual Snapshots 

a) Automated Snapshots:
--------------------------------
=> By default Redshift takes a snapshot about every eight hours or following every 5 GB per node of data changes, or whichever comes first. 
=> You can also create a snapshot schedule to control when automated snapshots are taken.
=> Automated snapshots are enabled by default when you create a cluster.

=> Automated snapshots are deleted at the end of a retention period. 
=> Default retention period is one day and you can modify if you want.
=> To disable automated snapshots, set the retention period to zero.

b) Manual Snapshots 
-----------------------------
=> You can take a manual snapshot any time. 
=> By default, manual snapshots are retained indefinitely, even after you delete your cluster. 
=> You can specify the retention period when you create a manual snapshot

Cross-Region:
------------------
=> You can configure Redshift to automatically copy snapshots of the Redshift Cluster to another Region

2.4) Storing Data into Redshift
========================
=> You can load the Data into Redshift in the following ways
a) Kinesis Firehose to Redshift
b) S3 to Redshift
c) EC2 to Redshift 


2.5) Redshift Cluster:
==================
=> Redshift data warehouse is a collection of nodes, which are organized into a group called a cluster. 
=> Each cluster runs an Amazon Redshift engine.

*** Diagram ***

Leader Node:
-----------------
=> Query Planing
=> Results Aggregation

Compute Node:
-------------------
=> Performing Queries
=> Send results to Leader

2.6) Demo : Creating Redshift Cluster
=============================
1) Goto Amazon Redshift Dashboard
2) Click on Clsuters (Left menu)
3) Click on Create Clsuter 
4) Provide the following Details

I) Cluster configuration
---------------------------------
a) Cluster identifier		:	myjlc-redshift-cluster
b) this cluster for?		: 	Production
c) Choose the size of the cluster:	I'll choose
d) Node type 		:	dc2.large
e) Number of nodes		:	1

II) Sample Data
-------------------
f) Select Load Sample Data

III) Database configurations
-------------------------------------
g) Admin user name		:	srinivas99
h) Admin Password 		:	sriniVas99

5) Click on Create Cluster button


2.7) Redshift Spectrum
===================
=> You can query the data that is in S3 without loading it.
=> You must have the Redshift Cluster available to Start the Query.
=> Query will be submited to thousands of Redshift Spectrum Nodes.

=> Redshift Spectrum queries incur additional charges

*** Diagram ***

2.8) Redshift Serverless:
===================
=> Redshift Serverless makes it easy to run and scale analytics without having to provision and manage data warehouses.

=> With Amazon Redshift Serverless, you can benefit from the following:

a) Access and analyze data without the need to set up, tune, and manage Amazon Redshift provisioned clusters.

b) Use the superior Redshift SQL capabilities, industry-leading performance, and data-lake integration 

c) Redshift automatically provisions and scales data warehouse capacity to deliver fast performance for demanding and unpredictable workloads. 

d) Pay only when the data warehouse is in use.


==============
3) Amazon EMR
==============

3.1) Introduction
==============
*** EMR --- Elastic MapReduce

=> EMR is a Fully Managed Big Data platform that allows you to process massive amount of data using Open Source Tools like Hadoop, Spark, Hive etc.

=> EMR helps to create Hadoop Clusters in AWS Cloud***

=> This Cluster can have hundreds of Nodes(EC2 Insatnces)

=> EMR Takes care of all the provisioning and Configuration of Cluster.

3.2) Hadoop Cluster
================

** Diagram ***

3.3) Demo : Creating EMR Cluster
==========================
1) Goto Amazon EMR Dashboard
2) Click on Clusters (Left menu)
3) Click on Create Clsuter 
4) Provide the following Details

I) General Configuration
---------------------------------
a) Cluster identifier		:	myjlc-emr-cluster
b) Launch Mode		: 	Cluster

II) Software configuration
-------------------------------------
c) Release			:	emr-5.36.0
d) Applications		:	Core Hadoop: Hadoop 2.10.1.........

III) Hardware configuration
--------------------------------------
e) Instance type		:	g3.4xlarge
f) Number of instances	:	3  (1 master and 2 core nodes)
g) Cluster scaling		:	scale cluster nodes based on workload (Not Required)
h) Auto-termination		:	Enable auto-termination (Not Required)
 

IV) Security and access
-------------------------------------
i) EC2 key pair		:	myjlc-kp
j) Permissions 		:	default

5) Click on Create Cluster button


3.4) Amazon EMR Serverless
======================
=> Amazon EMR Serverless is a new deployment option for Amazon EMR. 

=> EMR Serverless provides a serverless runtime environment that simplifies the operation of analytics applications that use the latest open source frameworks, such as Apache Spark and Apache Hive. 

=> With EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.

=> EMR Serverless helps you avoid over- or under-provisioning resources for your data processing jobs. 

=> EMR Serverless automatically determines the resources that the application needs, gets these resources to process your jobs 

=> EMR Serverless is suitable for customers who want ease in operating applications using open source frameworks. 


