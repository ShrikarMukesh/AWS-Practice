========================
Module 4 : Amazon EC2 - Part 3
========================
Part 1:
======
1) Exploring Amazon EC2 
2) Launching EC2 Instances
3) Key pairs

Part 2:
======
4) Security Groups
5) Connect to EC2 Instances

Part 3:
======
6) Virtualization
7) EC2 Instance Types
8) AWS Command Line

Part 4:
======
9) Using Roles
10) BootStrap Scripts with UserData
11) EC2 MetaData 

Part 5:
======
12) EC2 Pricing Options
13) EC2 Placement Groups
14) EC2 Tenancy Models

Part 6:
======
15) Exam Tips
Exam #4 - Amazon EC2


==============
6) Virtualization
==============
* Understanding Physiscal Servers and Virtual Servers


==================
7) EC2 Instance Types
==================
A) General Purpose
B) Compute Optimized
C) Memory Optimized
D) Storage Optimized
E) Accelerated Computing

A) General Purpose
===================
=> General purpose instances provide a balance of compute, memory and networking resources, and can be used for a variety of diverse workloads.

=> These instances are ideal for 
	** Developing, building, testing
	** Applications that use these resources in equal proportions such as Web Servers, Small Data bases

General Purpose Families
---------------------------------
A1, T2, T3, T3A, T4g, M4, M5, M5a, M5n, M5zn, M8a,M6i, M6g, Mac


B) Compute Optimized
===================
=> Compute Optimized instances are ideal for compute bound applications that benefit from high performance processors. 
=> These Instances are well suited for 
	** Batch processing workloads, 
	** Media transcoding, 
	** High performance web servers
	** High performance computing (HPC), 
	** Scientific modeling, 
	** Dedicated gaming servers 
	** Machine learning inference 
	and other compute intensive applications.

Compute Optimized Groups:
---------------------------------
C4, C5, C5a, C5n, C6a, C6i, C6g, C6gn, C7g, hpc6a


C) Memory Optimized
===================
=> Memory optimized instances are designed to deliver fast performance for workloads that process large data sets in memory.

=> Memory-intensive applications such as open-source databases, in-memory caches, and real time big data analytics

Memory Optimized Groups:
---------------------------------
R4, R5, R5a, R5b, R5n, R6i, R6g, X1, X1e, X2gd, X2idn, X2iedn, X2iezn, Z1d, 

D) Storage Optimized
===================
=> Storage optimized instances are designed for workloads that require high, sequential read and write access to very large data sets on local storage. 

=> They are optimized to deliver tens of thousands of low-latency, random I/O operations per second (IOPS) to applications.

Storage Optimized Groups:
---------------------------------
D2, D3, D3en, H1, I3, I3en, I4i, Is4gen , Im4gen



E) Accelerated Computing
===================
=> Accelerated computing instances use hardware accelerators, or co-processors, to perform functions, such as floating point number calculations, graphics processing, or data pattern matching, more efficiently than is possible in software running on CPUs.

=> Machine learning, high performance computing, computational fluid dynamics, computational finance, seismic analysis, speech recognition, autonomous vehicles, and drug discovery.

Accelerated Computing Groups:
---------------------------------
G3, G4ad, G4dn, G5, G5g, F1, P2, P3, P4


https://aws.amazon.com/ec2/instance-types/

==================
8) AWS Command Line
==================
=> You can access AWS Resources in two Ways

1) Using Management Console
2) Using AWS CLI or SDK

1) Using Management Console
------------------------------------------
=>To Access AWS Resources from Management Console, You need Username and Password 

2) Using AWS CLI or SDK
--------------------------------------
To Access AWS Resources from CLI or  SDK, you need two things

1) Access Key ID
2) Secrect Access Key

=> Create the IAM User with the name -  srinivas123

Keep the following belongs to the User
==============================
User name	:  srinivas123
Password		: sssss
Access key ID	: sssss
Secret access key	: sssssssss
Console login link 	:  https://166473396133.signin.aws.amazon.com/console

How to Access AWS from Command Line
=================================
1) Download and Install AWS CLI
2) Set the Path in System Environment Variables

D:\Amazon\AWSCLIV2

 aws.exe => 

3) Configure the AWS CLI 

aws configure
AWS Access Key ID [None]: ccccccccccccccc
AWS Secret Access Key [None]: ccccccccccccccccc
Default region name [None]: us-east-1
Default output format [None]: json

IAM Commands
=============

aws iam list-users

aws iam create-user --user-name hello123

aws iam list-users

aws iam delete-user --user-name hello123

aws iam list-users

aws iam create-user --user-name hello123

aws iam list-users


S3 Commands
=============

aws s3 ls

aws s3 mb s3://myjlc-bucket-1

aws s3 ls

aws s3 rb s3://myjlc-bucket-1

aws s3 ls

aws s3 mb s3://myjlc-bucket-1

aws s3 ls

echo "Hello Guys !!!" > hello.txt

aws s3 cp hello.txt  s3://myjlc-bucket-1

aws s3 ls  s3://myjlc-bucket-1


echo "Hai Guys !!!" > hai.txt

aws s3 mv hai.txt  s3://myjlc-bucket-1

aws s3 ls  s3://myjlc-bucket-1

aws s3 rm  s3://myjlc-bucket-1/hai.txt

aws s3 ls  s3://myjlc-bucket-1



